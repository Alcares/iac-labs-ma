name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --no-root
    - name: Cache Poetry dependencies
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs-ma/iac-labs-ma/example-app/.venv
        key: ${{ runner.os }}-venv

  test:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Restore Poetry dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs-ma/iac-labs-ma/example-app/.venv
        key: ${{ runner.os }}-venv
    - run: poetry run task test
    - run: poetry run task lint
    - run: poetry run task formatter
    - run: poetry run task security

  unittest:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Restore Poetry dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs-ma/iac-labs-ma/example-app/.venv
        key: ${{ runner.os }}-venv
    - run: echo "Unit testing"
